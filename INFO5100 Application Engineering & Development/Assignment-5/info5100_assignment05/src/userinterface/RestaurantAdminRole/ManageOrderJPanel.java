/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.RestaurantAdminRole;

import userinterface.DeliveryManRole.*;
import Business.EcoSystem;
import Business.Order.Order;
import Business.OrderQueue.LabTestWorkRequest;

import Business.UserAccount.UserAccount;
import Business.OrderQueue.OrderRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Eva
 */
public class ManageOrderJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private EcoSystem ecoSystem;
    
    
    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    public ManageOrderJPanel(JPanel userProcessContainer, UserAccount account,EcoSystem ecoSystem) {
        initComponents();
        this.setSize(600, 600);
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.ecoSystem = ecoSystem;
      
        
        populateTable();
        polulateCombo();
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) tblManageOrder.getModel();
        
        model.setRowCount(0);
        for (OrderRequest request : userAccount.getOrderQueue().getOrderRequestList()){
            Object[] row = new Object[5];
            row[0] = request.getOrder();
            row[1] = request.getSender();
            row[2] = request.getDeliver();
            row[3] = request;
//            String result = ((LabTestWorkRequest) request).getTestResult();
//            row[4] = result == null ? "Waiting" : result;
            row[4] = request.getComment();
            
            model.addRow(row);
        }
    }

    private void polulateCombo() {
        cmbDelivery.removeAllItems();
        for (UserAccount del : ecoSystem.getUserAccountDirectory().getUserAccountList()){
            if (del.getRole().toString().equals("Delivery")){
                  cmbDelivery.addItem(del);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblManageOrder = new javax.swing.JTable();
        btnRefresh = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnAssignDelivery = new javax.swing.JButton();
        btnReject = new javax.swing.JButton();
        cmbDelivery = new javax.swing.JComboBox();

        setBackground(new java.awt.Color(255, 255, 255));

        tblManageOrder.setFont(new java.awt.Font("微软雅黑", 1, 10)); // NOI18N
        tblManageOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Dish", "Customer", "DeliveryMan", "Status", "Comment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblManageOrder);
        if (tblManageOrder.getColumnModel().getColumnCount() > 0) {
            tblManageOrder.getColumnModel().getColumn(0).setResizable(false);
            tblManageOrder.getColumnModel().getColumn(1).setResizable(false);
            tblManageOrder.getColumnModel().getColumn(2).setResizable(false);
            tblManageOrder.getColumnModel().getColumn(3).setResizable(false);
            tblManageOrder.getColumnModel().getColumn(4).setResizable(false);
        }

        btnRefresh.setBackground(new java.awt.Color(204, 0, 0));
        btnRefresh.setFont(new java.awt.Font("微软雅黑", 1, 12)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(255, 255, 255));
        btnRefresh.setText("Refresh");
        btnRefresh.setBorderPainted(false);
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(0, 0, 0));
        btnBack.setFont(new java.awt.Font("微软雅黑", 1, 12)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("<< Back");
        btnBack.setBorderPainted(false);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnAssignDelivery.setBackground(new java.awt.Color(204, 0, 0));
        btnAssignDelivery.setFont(new java.awt.Font("微软雅黑", 1, 12)); // NOI18N
        btnAssignDelivery.setForeground(new java.awt.Color(255, 255, 255));
        btnAssignDelivery.setText("Assign Delivery");
        btnAssignDelivery.setBorderPainted(false);
        btnAssignDelivery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignDeliveryActionPerformed(evt);
            }
        });

        btnReject.setBackground(new java.awt.Color(0, 0, 255));
        btnReject.setFont(new java.awt.Font("微软雅黑", 1, 12)); // NOI18N
        btnReject.setForeground(new java.awt.Color(255, 255, 255));
        btnReject.setText("Reject Order");
        btnReject.setBorderPainted(false);
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });

        cmbDelivery.setFont(new java.awt.Font("微软雅黑", 1, 10)); // NOI18N
        cmbDelivery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDeliveryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRefresh))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmbDelivery, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAssignDelivery)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnReject))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnRefresh))
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReject)
                    .addComponent(cmbDelivery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAssignDelivery))
                .addGap(361, 361, 361))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        populateTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex=tblManageOrder.getSelectedRow();
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select an order");
            return;
        }

        OrderRequest request= (OrderRequest) this.tblManageOrder.getValueAt(selectedRowIndex, 3);
        userAccount.getOrderQueue().removeOrderRequest(request);
        request.setStatus("Rejected");       
        Order order;
        order=(Order)this.tblManageOrder.getValueAt(selectedRowIndex, 0);
        userAccount.getOrderQueue().getMasterOrderList().removeOrder(order);
        JOptionPane.showMessageDialog(null, "Order Rejected.");
        populateTable();
    }//GEN-LAST:event_btnRejectActionPerformed

    private void cmbDeliveryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDeliveryActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cmbDeliveryActionPerformed

    private void btnAssignDeliveryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignDeliveryActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblManageOrder.getSelectedRow();       
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select an order");
            return;
        }
        UserAccount selectedDel=(UserAccount)cmbDelivery.getSelectedItem();
        
        OrderRequest request = (OrderRequest)tblManageOrder.getValueAt(selectedRow, 3);
        request.setDeliver(selectedDel);
        request.setStatus("Delivering");
        JOptionPane.showMessageDialog(this, "Delivery arranged");
        populateTable();
    }//GEN-LAST:event_btnAssignDeliveryActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssignDelivery;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnReject;
    private javax.swing.JComboBox cmbDelivery;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblManageOrder;
    // End of variables declaration//GEN-END:variables


}
