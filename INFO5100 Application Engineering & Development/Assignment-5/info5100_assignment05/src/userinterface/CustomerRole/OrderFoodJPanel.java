/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Order.Food;
import Business.Order.MasterOrderList;
import Business.Order.Order;
import Business.Order.OrderItem;
import Business.OrderQueue.LabTestWorkRequest;
import Business.OrderQueue.OrderRequest;
import Business.Organization;
import Business.RestaurantOrganization;
import Business.UserAccount.UserAccount;
import Business.UserAccount.UserAccountDirectory;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Eva
 */
public class OrderFoodJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    EcoSystem ecoSystem;
    Order order=new Order();
    /**
     * Creates new form RequestLabTestJPanel
     */
    public OrderFoodJPanel(JPanel userProcessContainer, UserAccount account,EcoSystem ecoSystem) {
        initComponents();
        this.setSize(600, 600);
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.ecoSystem = ecoSystem;
        
        
        polulateCombo();
        polulateTable();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        lblRestaurant = new javax.swing.JLabel();
        cmbRestaurant = new javax.swing.JComboBox();
        lblMenu = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMenu = new javax.swing.JTable();
        btnPlaceOrder = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        btnBack.setBackground(new java.awt.Color(0, 0, 0));
        btnBack.setFont(new java.awt.Font("微软雅黑", 1, 12)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("<< Back");
        btnBack.setBorderPainted(false);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblRestaurant.setFont(new java.awt.Font("微软雅黑", 1, 12)); // NOI18N
        lblRestaurant.setText("Restaurant:");

        cmbRestaurant.setFont(new java.awt.Font("微软雅黑", 1, 12)); // NOI18N
        cmbRestaurant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbRestaurantActionPerformed(evt);
            }
        });

        lblMenu.setFont(new java.awt.Font("微软雅黑", 1, 12)); // NOI18N
        lblMenu.setText("Menu:");

        tblMenu.setFont(new java.awt.Font("微软雅黑", 1, 10)); // NOI18N
        tblMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Dish Name", "ID", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblMenu);

        btnPlaceOrder.setBackground(new java.awt.Color(204, 0, 0));
        btnPlaceOrder.setFont(new java.awt.Font("微软雅黑", 1, 12)); // NOI18N
        btnPlaceOrder.setForeground(new java.awt.Color(255, 255, 255));
        btnPlaceOrder.setText("Place Order");
        btnPlaceOrder.setBorderPainted(false);
        btnPlaceOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlaceOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnPlaceOrder)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblMenu)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblRestaurant, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cmbRestaurant, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(btnBack)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(btnBack)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRestaurant, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbRestaurant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblMenu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPlaceOrder)
                .addContainerGap(257, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CustomerAreaJPanel cajp = (CustomerAreaJPanel) component;
        cajp.populateTable();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void cmbRestaurantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbRestaurantActionPerformed
        // TODO add your handling code here:
        polulateTable();
    }//GEN-LAST:event_cmbRestaurantActionPerformed

    private void btnPlaceOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlaceOrderActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex=tblMenu.getSelectedRow();
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a food");
            return;
        }
        Food food= (Food) this.tblMenu.getValueAt(selectedRowIndex, 0);
      
        String foodName=food.getProdName();
        
        order.setFoodName(foodName);

        
        UserAccount selectedRes=(UserAccount)cmbRestaurant.getSelectedItem();
        if(selectedRes.getOrderQueue().getMasterOrderList()==null){
            MasterOrderList masterOrderList=new MasterOrderList();
            selectedRes.getOrderQueue().setMasterOrderList(masterOrderList);
        }
        if(userAccount.getOrderQueue().getMasterOrderList()==null){
            MasterOrderList masterOrderList=new MasterOrderList();
            userAccount.getOrderQueue().setMasterOrderList(masterOrderList);
        }
       selectedRes.getOrderQueue().getMasterOrderList().addNewOrder(order); //add order to restaurant
       userAccount.getOrderQueue().getMasterOrderList().addNewOrder(order); //add order to customer
       
       requestSend(selectedRes);
       
       order=new Order();
       polulateCombo();
       polulateTable();


       JOptionPane.showMessageDialog(this, "Order Successfully Placed!");
    }//GEN-LAST:event_btnPlaceOrderActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnPlaceOrder;
    private javax.swing.JComboBox cmbRestaurant;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMenu;
    private javax.swing.JLabel lblRestaurant;
    private javax.swing.JTable tblMenu;
    // End of variables declaration//GEN-END:variables

    private void polulateCombo() {
        cmbRestaurant.removeAllItems();
        for (UserAccount res : ecoSystem.getUserAccountDirectory().getUserAccountList()){
            if (res.getRole().toString().equals("RestaurantAdmin")){
                  cmbRestaurant.addItem(res);
            }
        }
    }
    
    private void polulateTable() {
        UserAccount selectedRes=(UserAccount)cmbRestaurant.getSelectedItem();
        if(selectedRes==null){
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblMenu.getModel();
        model.setRowCount(0);

        for (Food f : selectedRes.getOrderQueue().getFoodCatalog().getProductcatalog()) {
            Object row[] = new Object[3];
            row[0] = f;
            row[1] = f.getModelNumber();
            row[2] = f.getPrice();
            model.addRow(row);
        }
    }

    private void requestSend(UserAccount selectedRes) {

        if(order==null){
            JOptionPane.showMessageDialog(null, "Please enter something to send.");
            return;
        }
        
        LabTestWorkRequest request = new LabTestWorkRequest();
        request.setOrder(order);
        request.setSender(userAccount);
        request.setReceiver(selectedRes);
        request.setDeliver(null);
        request.setStatus("Waiting");
        
        userAccount.getOrderQueue().getOrderRequestList().add(request);
        selectedRes.getOrderQueue().getOrderRequestList().add(request);
    }   
}
