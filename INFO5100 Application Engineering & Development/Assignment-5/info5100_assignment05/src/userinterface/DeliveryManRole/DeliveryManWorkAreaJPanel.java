/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DeliveryManRole;

import Business.EcoSystem;
import Business.Order.Order;
import Business.OrderQueue.LabTestWorkRequest;

import Business.UserAccount.UserAccount;
import Business.OrderQueue.OrderRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Eva
 */
public class DeliveryManWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem ecoSystem;
    private UserAccount userAccount;
    private LabTestWorkRequest request;   
    
    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    public DeliveryManWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem ecoSystem) {
        initComponents();
        this.setSize(600, 600);
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.ecoSystem = ecoSystem;

      
        
        populateTable();
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) tblManageOrder.getModel();
        
        model.setRowCount(0);
        for (UserAccount res : ecoSystem.getUserAccountDirectory().getUserAccountList()){
            if (res.getRole().toString().equals("RestaurantAdmin")){
                for (OrderRequest request : res.getOrderQueue().getOrderRequestList()){
                if(request.getDeliver()==userAccount){
                Object[] row = new Object[5];
                row[0] = request.getOrder();
                row[1] = request.getSender();
                row[2] = request.getReceiver();
                row[3] = request;
//                String result = ((LabTestWorkRequest) request).getTestResult();
//                row[4] = result == null ? "Waiting" : result;
                row[4] = request.getComment();
            
                model.addRow(row);
            }

        }
                  
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        processJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblManageOrder = new javax.swing.JTable();
        btnCancelDel = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        processJButton.setBackground(new java.awt.Color(204, 0, 0));
        processJButton.setFont(new java.awt.Font("微软雅黑", 1, 12)); // NOI18N
        processJButton.setForeground(new java.awt.Color(255, 255, 255));
        processJButton.setText("Confirm Delivery");
        processJButton.setBorderPainted(false);
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });

        refreshJButton.setBackground(new java.awt.Color(204, 0, 0));
        refreshJButton.setFont(new java.awt.Font("微软雅黑", 1, 12)); // NOI18N
        refreshJButton.setForeground(new java.awt.Color(255, 255, 255));
        refreshJButton.setText("Refresh");
        refreshJButton.setBorderPainted(false);
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });

        tblManageOrder.setFont(new java.awt.Font("微软雅黑", 1, 10)); // NOI18N
        tblManageOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Dish", "Customer", "Restaurant", "Status", "Comment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblManageOrder);

        btnCancelDel.setBackground(new java.awt.Color(0, 0, 255));
        btnCancelDel.setFont(new java.awt.Font("微软雅黑", 1, 12)); // NOI18N
        btnCancelDel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelDel.setText("Cancel Delivery");
        btnCancelDel.setBorderPainted(false);
        btnCancelDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelDelActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("微软雅黑", 1, 24)); // NOI18N
        lblTitle.setText("DeliveryMan Work Area");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(refreshJButton)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCancelDel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(processJButton))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(lblTitle)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addComponent(refreshJButton)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(processJButton)
                    .addComponent(btnCancelDel))
                .addContainerGap(323, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed
        int selectedRowIndex=tblManageOrder.getSelectedRow();
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select an order");
            return;
        }
        OrderRequest request= (OrderRequest) this.tblManageOrder.getValueAt(selectedRowIndex, 3);
        
        request.setStatus("Delivered");
        JOptionPane.showMessageDialog(null, "Delivery success!");
        populateTable();
        
    }//GEN-LAST:event_processJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void btnCancelDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelDelActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex=tblManageOrder.getSelectedRow();
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select an order");
            return;
        }
        OrderRequest request= (OrderRequest) this.tblManageOrder.getValueAt(selectedRowIndex, 3);
        
        userAccount.getOrderQueue().removeOrderRequest(request);
        request.setDeliver(null);
        request.setStatus("Waiting");
//        Order order;
//        order=(Order)this.tblManageOrder.getValueAt(selectedRowIndex, 0);
//        userAccount.getOrderQueue().getMasterOrderList().removeOrder(order);
        JOptionPane.showMessageDialog(null, "Delivery Canceled.");
        populateTable();
    }//GEN-LAST:event_btnCancelDelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelDel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JButton processJButton;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JTable tblManageOrder;
    // End of variables declaration//GEN-END:variables
}
