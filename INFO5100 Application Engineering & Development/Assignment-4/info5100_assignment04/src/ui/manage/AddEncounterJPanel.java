/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.manage;

import java.awt.CardLayout;
import java.awt.Component;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.Admin;
import model.Encounter;
import model.EncounterHistory;
import model.Patient;

/**
 *
 * @author Eva
 */
public class AddEncounterJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddEncounter
     */
    DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
    Date date = new Date();
    Calendar calender = Calendar.getInstance();
    
    JPanel workAreaJPanel;
    Patient patient;
    Admin admin;

    
    public AddEncounterJPanel(JPanel wajp, Patient p) {
        initComponents();
        setSize(600,600);
        workAreaJPanel =wajp;
        patient = p;
        
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDiastolicPressure = new javax.swing.JLabel();
        lblSystolicPressure = new javax.swing.JLabel();
        btnConfirmAdd = new javax.swing.JButton();
        txtSystolicPressure = new javax.swing.JTextField();
        lblTitle = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        txtDiastolicPressure = new javax.swing.JTextField();
        lblSPValid = new javax.swing.JLabel();
        lblDPValid = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        lblDiastolicPressure.setFont(new java.awt.Font("微软雅黑", 1, 14)); // NOI18N
        lblDiastolicPressure.setText("Diastolic Pressure:");

        lblSystolicPressure.setFont(new java.awt.Font("微软雅黑", 1, 14)); // NOI18N
        lblSystolicPressure.setText("Systolic Pressure:");

        btnConfirmAdd.setBackground(new java.awt.Color(0, 51, 204));
        btnConfirmAdd.setFont(new java.awt.Font("微软雅黑", 1, 18)); // NOI18N
        btnConfirmAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnConfirmAdd.setText("Confirm Add");
        btnConfirmAdd.setBorderPainted(false);
        btnConfirmAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnConfirmAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmAddActionPerformed(evt);
            }
        });

        txtSystolicPressure.setFont(new java.awt.Font("微软雅黑", 1, 12)); // NOI18N
        txtSystolicPressure.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSystolicPressureKeyReleased(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("微软雅黑", 1, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Add New Encounter");

        btnBack.setBackground(new java.awt.Color(0, 0, 0));
        btnBack.setFont(new java.awt.Font("微软雅黑", 1, 12)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("<< Back");
        btnBack.setBorderPainted(false);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        txtDiastolicPressure.setFont(new java.awt.Font("微软雅黑", 1, 12)); // NOI18N
        txtDiastolicPressure.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDiastolicPressureKeyReleased(evt);
            }
        });

        lblSPValid.setFont(new java.awt.Font("Times New Roman", 0, 10)); // NOI18N
        lblSPValid.setForeground(new java.awt.Color(51, 51, 51));
        lblSPValid.setMaximumSize(new java.awt.Dimension(42, 23));
        lblSPValid.setMinimumSize(new java.awt.Dimension(42, 23));

        lblDPValid.setFont(new java.awt.Font("Times New Roman", 0, 10)); // NOI18N
        lblDPValid.setForeground(new java.awt.Color(51, 51, 51));
        lblDPValid.setMaximumSize(new java.awt.Dimension(42, 23));
        lblDPValid.setMinimumSize(new java.awt.Dimension(42, 23));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(0, 524, Short.MAX_VALUE))
                    .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDiastolicPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblSystolicPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtDiastolicPressure, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                                    .addComponent(txtSystolicPressure)))
                            .addComponent(btnConfirmAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSPValid, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                            .addComponent(lblDPValid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(122, 122, 122))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblDiastolicPressure, lblSystolicPressure});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTitle)
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblSystolicPressure)
                                    .addComponent(lblSPValid, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(42, 42, 42)
                                        .addComponent(lblDiastolicPressure))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblDPValid, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(txtDiastolicPressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(txtSystolicPressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32)
                .addComponent(btnConfirmAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(265, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmAddActionPerformed
        // TODO add your handling code here:
        if(txtSystolicPressure.getText().equals("")||txtDiastolicPressure.getText().equals("")){

            JOptionPane.showMessageDialog(null, "Please enter all information!", "Warning", JOptionPane.WARNING_MESSAGE);

        }else{

            Encounter e;
            e = patient.getEncounterHistory().addEncounter();
            e.setSystolicPressure(Integer.valueOf(txtSystolicPressure.getText()));
            e.setDiastolicPressure(Integer.valueOf(txtDiastolicPressure.getText()));
            e.setTime(dateFormat.format(date));
            e.setIsNormal();
                       

            JOptionPane.showMessageDialog(this, "Encounter updated");

        }
    }//GEN-LAST:event_btnConfirmAddActionPerformed

    private void txtSystolicPressureKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSystolicPressureKeyReleased
        // only letters
        String regx = "^200|1\\d\\d|[1-9]?\\d$";
        Pattern pattern = Pattern.compile(regx);
        Matcher match = pattern.matcher(txtSystolicPressure.getText());
        if(!match.matches()){
            lblSPValid.setText("Invalid");
        }
        else{
            lblSPValid.setText("OK");
        }
    }//GEN-LAST:event_txtSystolicPressureKeyReleased

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        workAreaJPanel.remove(this);
        Component[] componentArray = workAreaJPanel.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ViewEncounterHistoryJPanel viewEncounterHistoryJPanel = (ViewEncounterHistoryJPanel) component;
        viewEncounterHistoryJPanel.refreshTable();
        CardLayout layout = (CardLayout) workAreaJPanel.getLayout();
        layout.previous(workAreaJPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtDiastolicPressureKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDiastolicPressureKeyReleased
        // only numbers
        String regx = "^200|1\\d\\d|[1-9]?\\d$";
        Pattern pattern = Pattern.compile(regx);
        Matcher match = pattern.matcher(txtDiastolicPressure.getText());
        if(!match.matches()){
            lblDPValid.setText("Invalid");
        }
        else{
            lblDPValid.setText("OK");
        }
    }//GEN-LAST:event_txtDiastolicPressureKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnConfirmAdd;
    private javax.swing.JLabel lblDPValid;
    private javax.swing.JLabel lblDiastolicPressure;
    private javax.swing.JLabel lblSPValid;
    private javax.swing.JLabel lblSystolicPressure;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtDiastolicPressure;
    private javax.swing.JTextField txtSystolicPressure;
    // End of variables declaration//GEN-END:variables
}
