/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.manage;

import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Admin;
import model.Encounter;
import model.Patient;
import model.VitalSigns;

/**
 *
 * @author Eva
 */
public class ViewEncounterHistoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewEncounterHistoryJPanel
     */
    private JPanel workAreaJPanel;
    private Patient patient;
    private  Admin admin;
    
    
    public ViewEncounterHistoryJPanel(JPanel wajp, Patient p,Admin a) {
        initComponents();
        setSize(600,600);
        workAreaJPanel =wajp;
        patient = p;
        admin = a;

        lblPatient.setText("Patient : " + p.getPersonName());
        refreshTable();
    }
    
    public void refreshTable(){
        DefaultTableModel model = (DefaultTableModel) tblManageEncounter.getModel();
        model.setRowCount(0);
        
        for (Encounter e : patient.getEncounterHistory().getEncounterHistory()) {
            Object row[] = new Object[4];
            row[0] = e;
            row[1] = e.getSystolicPressure();
            row[2] = e.getDiastolicPressure();
            row[3] = e.getTime();
            
            model.addRow(row);
        }
    }

 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ManageScrollPane = new javax.swing.JScrollPane();
        tblManageEncounter = new javax.swing.JTable();
        lblTitle = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnAddEncounter = new javax.swing.JButton();
        btnDeleteEncounter = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        lblPatient = new javax.swing.JLabel();

        tblManageEncounter.setFont(new java.awt.Font("微软雅黑", 1, 10)); // NOI18N
        tblManageEncounter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Systolic Pressure", "Diastolic Pressure", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ManageScrollPane.setViewportView(tblManageEncounter);

        lblTitle.setFont(new java.awt.Font("微软雅黑", 1, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText(">>>>>Manage Encounter History<<<<<");

        btnBack.setBackground(new java.awt.Color(0, 0, 0));
        btnBack.setFont(new java.awt.Font("微软雅黑", 1, 12)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("<< Back");
        btnBack.setBorderPainted(false);
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnAddEncounter.setBackground(new java.awt.Color(0, 51, 204));
        btnAddEncounter.setFont(new java.awt.Font("微软雅黑", 1, 12)); // NOI18N
        btnAddEncounter.setForeground(new java.awt.Color(255, 255, 255));
        btnAddEncounter.setText("Add Encounter");
        btnAddEncounter.setBorderPainted(false);
        btnAddEncounter.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEncounterActionPerformed(evt);
            }
        });

        btnDeleteEncounter.setBackground(new java.awt.Color(0, 51, 204));
        btnDeleteEncounter.setFont(new java.awt.Font("微软雅黑", 1, 12)); // NOI18N
        btnDeleteEncounter.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteEncounter.setText("Delete Encounter");
        btnDeleteEncounter.setBorderPainted(false);
        btnDeleteEncounter.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDeleteEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteEncounterActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(0, 51, 204));
        btnUpdate.setFont(new java.awt.Font("微软雅黑", 1, 12)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update Encounter");
        btnUpdate.setBorderPainted(false);
        btnUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblPatient.setFont(new java.awt.Font("微软雅黑", 1, 14)); // NOI18N
        lblPatient.setText("Patient:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDeleteEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ManageScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack)
                    .addComponent(lblPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(btnBack)
                .addGap(70, 70, 70)
                .addComponent(lblTitle)
                .addGap(14, 14, 14)
                .addComponent(lblPatient)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ManageScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddEncounter)
                    .addComponent(btnUpdate)
                    .addComponent(btnDeleteEncounter))
                .addContainerGap(201, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        workAreaJPanel.remove(this);
        Component[] componentArray = workAreaJPanel.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ManageJPanel manageJPanel = (ManageJPanel) component;
        manageJPanel.refreshTable();
        CardLayout layout = (CardLayout) workAreaJPanel.getLayout();
        layout.previous(workAreaJPanel);
    

    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEncounterActionPerformed
        // TODO add your handling code here:
        AddEncounterJPanel aejp = new AddEncounterJPanel(workAreaJPanel, patient);
        workAreaJPanel.add("AddEncounterJPanel", aejp);
        CardLayout layout = (CardLayout) workAreaJPanel.getLayout();
        layout.next(workAreaJPanel);


    }//GEN-LAST:event_btnAddEncounterActionPerformed

    private void btnDeleteEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteEncounterActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblManageEncounter.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select one encounter!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Encounter e = (Encounter) tblManageEncounter.getValueAt(selectedRowIndex, 0);
        patient.getEncounterHistory().removeEncounter(e);
        JOptionPane.showMessageDialog(this, "Encounter deleted.");
        refreshTable();

    }//GEN-LAST:event_btnDeleteEncounterActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblManageEncounter.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select one encounter!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        
        Encounter e = (Encounter) tblManageEncounter.getValueAt(selectedRowIndex, 0);
        
        UpdateEncounterJPanel uejp = new  UpdateEncounterJPanel(workAreaJPanel,e,patient);
        workAreaJPanel.add(" UpdateEncounterJPanel", uejp);
        CardLayout layout = (CardLayout) workAreaJPanel.getLayout();
        layout.next(workAreaJPanel);

    }//GEN-LAST:event_btnUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ManageScrollPane;
    private javax.swing.JButton btnAddEncounter;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeleteEncounter;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel lblPatient;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblManageEncounter;
    // End of variables declaration//GEN-END:variables
}
