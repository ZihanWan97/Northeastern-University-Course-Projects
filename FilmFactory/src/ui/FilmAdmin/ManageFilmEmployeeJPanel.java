/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.FilmAdmin;

import Ecosystem.Enterprise.Enterprise;
import Ecosystem.FilmFactorySystem;
import Ecosystem.Network.Network;
import Ecosystem.Organization.Organization;
import Ecosystem.Role.FilmCameramanRole;
import Ecosystem.Role.FilmDirectorRole;
import Ecosystem.Role.FilmScriptwriterRole;
import Ecosystem.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Eva
 */
public class ManageFilmEmployeeJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageFilmEmployee
     */
    JPanel workArea;
    FilmFactorySystem system;
    UserAccount filmAdmin;
    String enName;
    public ManageFilmEmployeeJPanel(JPanel workArea, UserAccount filmAdmin, FilmFactorySystem system) {
        initComponents();
        this.workArea= workArea;
        this.system = system;
        this.filmAdmin = filmAdmin;
        enName = filmAdmin.getUsername();
        sVGImage1.setSvgImage("UIDesign/undraw_add_user_re_5oib.svg", 230,160);
        setSize(750, 530);
        initCmb();
        populateTable();
    }
    
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) infoTable.getModel();
        model.setRowCount(0);  
        for(Network network:system.getNetworkList()) {
            for (Enterprise enterprise: network.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise.getName().equals(enName)) {
                    for(Organization org: enterprise.getOrganizationDirectory().getOrganizationList()) {
                        for(UserAccount ua: org.getUserAccountDirectory().getUserAccountList()) {
                            if (!ua.getRole().toString().equals("FilmAdmin")) {
                                Object[] row = new Object[3];
                                row[0] = ua;
                                row[1] = ua.getPassword();
                                row[2] = ua.getRole().type.getValue();
                                model.addRow(row);
                            }
                        }
                    }
                }
            }
        } 
    }
    
    private void initCmb() {
        cmbRoleType.setModel(new DefaultComboBoxModel<>(new String[]{
            "Director","Scriptwriter","Cameraman"
        }));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        infoTable = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        btnComfirmUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cmbRoleType = new javax.swing.JComboBox<>();
        lblPasswordCheck = new javax.swing.JLabel();
        lblNameCheck = new javax.swing.JLabel();
        sVGImage1 = new UIDesign.SVGImage();

        setBackground(new java.awt.Color(10, 10, 10));

        lblTitle.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setText("Manage Film Employee");

        btnBack.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        infoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "UserName", "Password", "Role Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(infoTable);

        btnUpdate.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnComfirmUpdate.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        btnComfirmUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnComfirmUpdate.setText("Comfirm Update");
        btnComfirmUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComfirmUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnCreate.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        btnCreate.setForeground(new java.awt.Color(255, 255, 255));
        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Add New Film Employee:");

        txtUserName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUserNameKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("UserName:");

        jLabel4.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Password:");

        txtPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPasswordKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("RoleType:");

        cmbRoleType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblPasswordCheck.setFont(new java.awt.Font("Segoe UI Black", 0, 10)); // NOI18N
        lblPasswordCheck.setForeground(new java.awt.Color(255, 255, 255));

        lblNameCheck.setFont(new java.awt.Font("Segoe UI Black", 0, 10)); // NOI18N
        lblNameCheck.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBack)
                                .addGap(125, 125, 125)
                                .addComponent(sVGImage1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28))
                            .addComponent(lblTitle)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtUserName)
                                    .addComponent(txtPassword)
                                    .addComponent(cmbRoleType, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblNameCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPasswordCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(13, 13, 13)
                                .addComponent(btnCreate))
                            .addComponent(jLabel2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(btnUpdate)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnComfirmUpdate)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnDelete))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(149, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sVGImage1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnComfirmUpdate)
                    .addComponent(btnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(cmbRoleType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNameCheck, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblPasswordCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        workArea.remove(this);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.previous(workArea);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        String name = txtUserName.getText();
        String pwd =  txtPassword.getText();
        String type = cmbRoleType.getSelectedItem().toString();
        int i =0;
        if (name.isEmpty() || pwd.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Something is invalid!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            for(Network network: system.getNetworkList()) {
                for (Enterprise enterprise: network.getEnterpriseDirectory().getEnterpriseList()) {
                    if (enterprise.getEnterpriseType().toString().equals("FilmEn")) {
                        for(Organization org: enterprise.getOrganizationDirectory().getOrganizationList()) {                                
                                for(UserAccount ua: org.getUserAccountDirectory().getUserAccountList()) {
                                    if(ua.getUsername().equals(name)){
                                        i =1;
                                        break;  
                                    }
                                }
                                if(i==1){
                                    JOptionPane.showMessageDialog(this, "This username is already registered in FilmEn!", "Warning", JOptionPane.WARNING_MESSAGE);
                                    return;
                                }
                        } 
                    }                   
                    if (enterprise.getName().equals(enName)) {
                        switch (type) {
                            case "Director":
                                for(Organization org: enterprise.getOrganizationDirectory().getOrganizationList()) {
                                    if (org.getName().equals("FilmDirectorOrg")) {
                                        org.getUserAccountDirectory().createUserAccount(name, pwd, new FilmDirectorRole());
                                        JOptionPane.showMessageDialog(this, "Information Saved!");
                                        populateTable();
                                        break;
                                    }   
                                } break;
                            case "Scriptwriter":
                                for(Organization org: enterprise.getOrganizationDirectory().getOrganizationList()) {
                                    if (org.getName().equals("FilmScriptwriterOrg")) {
                                        org.getUserAccountDirectory().createUserAccount(name, pwd, new FilmScriptwriterRole());
                                        JOptionPane.showMessageDialog(this, "Information Saved!");
                                        populateTable();
                                        break;
                                    }
                                }   break;
                                
                            case "Cameraman":
                                for(Organization org: enterprise.getOrganizationDirectory().getOrganizationList()) {
                                    if (org.getName().equals("FilmCameramanOrg")) {
                                        org.getUserAccountDirectory().createUserAccount(name, pwd, new FilmCameramanRole());
                                        JOptionPane.showMessageDialog(this, "Information Saved!");
                                        populateTable();
                                        break;
                                    }
                                }   break;
                                
                            default:
                                break;
                        }
                    }
                }
            }
        }
        txtUserName.setText("");
        txtPassword.setText("");
        //populateTable();
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int row = infoTable.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        UserAccount a = (UserAccount)infoTable.getValueAt(row,0);
        String type = a.getRole().type.getValue();
        switch (type) {
            case "FilmDirector":
                initCmb();
                break;
            case "FilmScriptwriter":
                cmbRoleType.setModel(new DefaultComboBoxModel<>(new String[]{
                    "Scriptwriter","Director","Cameraman"
                }));    break;
            case "FilmCameraman":
                cmbRoleType.setModel(new DefaultComboBoxModel<>(new String[]{
                    "Cameraman","Scriptwriter","Director" 
                }));    break;
            default:
                break;
        }
        txtUserName.setText(a.getUsername());
        txtPassword.setText(a.getPassword());
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnComfirmUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComfirmUpdateActionPerformed
        int row = infoTable.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        UserAccount a = (UserAccount)infoTable.getValueAt(row,0);
        String name = txtUserName.getText();
        String pwd =  txtPassword.getText();
        
        if (name.isEmpty() || pwd.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Something is invalid!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            a.setPassword(pwd);
            a.setUsername(name);
            JOptionPane.showMessageDialog(this, "Information Saved!");
            populateTable();
            
        }
        initCmb();
        txtUserName.setText("");
        txtPassword.setText("");
    }//GEN-LAST:event_btnComfirmUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int row = infoTable.getSelectedRow();
        if(row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        UserAccount a = (UserAccount)infoTable.getValueAt(row,0);
        for(Network network:system.getNetworkList()) {
            for (Enterprise enterprise: network.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise.getName().equals(enName)) {
                    for(Organization org: enterprise.getOrganizationDirectory().getOrganizationList()) {
                        org.getUserAccountDirectory().removeUserAccount(a);
                    }
                }
            }
        }
        JOptionPane.showMessageDialog(null, "Deleted.");
        populateTable();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtUserNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserNameKeyReleased
        String regx = "^\\S*$";
        Pattern pattern = Pattern.compile(regx);
        Matcher match = pattern.matcher(txtUserName.getText());       
        if(!match.matches()){
            lblNameCheck.setText("Invalid");
        }
        else{
            lblNameCheck.setText("OK");
        }
    }//GEN-LAST:event_txtUserNameKeyReleased

    private void txtPasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordKeyReleased
        String regx = "^\\S*$";
        Pattern pattern = Pattern.compile(regx);
        Matcher match = pattern.matcher(txtPassword.getText());       
        if(!match.matches()){
            lblPasswordCheck.setText("Invalid");
        }
        else{
            lblPasswordCheck.setText("OK");
        }
    }//GEN-LAST:event_txtPasswordKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnComfirmUpdate;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbRoleType;
    private javax.swing.JTable infoTable;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblNameCheck;
    private javax.swing.JLabel lblPasswordCheck;
    private javax.swing.JLabel lblTitle;
    private UIDesign.SVGImage sVGImage1;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
