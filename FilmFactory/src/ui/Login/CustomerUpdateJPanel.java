/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.Login;

import Ecosystem.DB4OUtil.DB4OUtil;
import Ecosystem.Enterprise.Enterprise;
import Ecosystem.FilmFactorySystem;
import Ecosystem.Network.Network;
import Ecosystem.Organization.Organization;
import Ecosystem.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;
import java.util.Random;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Eva
 */
public class CustomerUpdateJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerUpdateJPanel
     */
    JPanel mainWorkArea;
    FilmFactorySystem system;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    public CustomerUpdateJPanel(JPanel mainWorkArea, FilmFactorySystem system) {
        initComponents();
        this.mainWorkArea= mainWorkArea;
        this.system = system;
        setSize(750, 530);
        sVGImage1.setSvgImage("UIDesign/undraw_forgot_password_re_hxwm.svg", 230,160);
        vcode.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblTitle = new javax.swing.JLabel();
        btnSendCode = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        lblCode = new javax.swing.JLabel();
        btnComfirmUpdate = new javax.swing.JButton();
        vcode = new javax.swing.JLabel();
        txtCode = new javax.swing.JTextField();
        lblPasswordCheck = new javax.swing.JLabel();
        sVGImage1 = new UIDesign.SVGImage();

        setBackground(new java.awt.Color(10, 10, 10));

        btnBack.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblEmail.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        lblEmail.setForeground(new java.awt.Color(255, 255, 255));
        lblEmail.setText("Email:");

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Customer Update Password");

        btnSendCode.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        btnSendCode.setForeground(new java.awt.Color(255, 255, 255));
        btnSendCode.setText("Send Code");
        btnSendCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendCodeActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Password:");

        txtPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPasswordKeyReleased(evt);
            }
        });

        lblCode.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        lblCode.setForeground(new java.awt.Color(255, 255, 255));
        lblCode.setText("Code:");

        btnComfirmUpdate.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        btnComfirmUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnComfirmUpdate.setText("Comfirm Update");
        btnComfirmUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComfirmUpdateActionPerformed(evt);
            }
        });

        lblPasswordCheck.setFont(new java.awt.Font("Segoe UI Black", 0, 10)); // NOI18N
        lblPasswordCheck.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(btnBack)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(217, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(sVGImage1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(258, 258, 258))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(lblEmail)
                            .addComponent(lblCode))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPassword)
                            .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSendCode)
                            .addComponent(vcode, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPasswordCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(140, 140, 140))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnComfirmUpdate)
                        .addGap(276, 276, 276))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(btnBack)
                .addGap(18, 18, 18)
                .addComponent(sVGImage1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSendCode, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(vcode, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblCode)
                        .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblPasswordCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnComfirmUpdate)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnSendCode, txtEmail});

    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        mainWorkArea.remove(this);
        CardLayout layout = (CardLayout) mainWorkArea.getLayout();
        layout.previous(mainWorkArea);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void btnComfirmUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComfirmUpdateActionPerformed
        String ToEmail = txtEmail.getText(); 
        int i =0;
        if(ToEmail.isEmpty()){
        JOptionPane.showMessageDialog(this, "Please enter your registered email address!", "Warning", JOptionPane.WARNING_MESSAGE);
        }else{
                for(Network network:system.getNetworkList()) {
                    for (Enterprise enterprise: network.getEnterpriseDirectory().getEnterpriseList()) {
                        if (enterprise.getEnterpriseType().toString().equals("CustomerEn")) {
                            for(Organization org: enterprise.getOrganizationDirectory().getOrganizationList()) {
                                for(UserAccount ua: org.getUserAccountDirectory().getUserAccountList()) {
                                    if(ua.getRole().toString().equals("Customer")){
                                        if(ua.getEmail().equals(ToEmail)){
                                             i =1;
                                             break;  
                                        }
                                    }
                                }
                                if(i==0){
                                    JOptionPane.showMessageDialog(this, "This email address is not registered.", "Warning", JOptionPane.WARNING_MESSAGE);
                                }
                            }
                        }
                    }
                }
        }
        
        for(Network network:system.getNetworkList()) {
            for (Enterprise enterprise: network.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise.getEnterpriseType().toString().equals("CustomerEn")) {
                    for(Organization org: enterprise.getOrganizationDirectory().getOrganizationList()) {
                        for(UserAccount ua: org.getUserAccountDirectory().getUserAccountList()) {
                            if (ua.getRole().toString().equals("Customer")&&ua.getEmail().equals(ToEmail)) {
                                if(vcode.getText().isEmpty()){
                                    JOptionPane.showMessageDialog(this, "Please send the code!", "Warning", JOptionPane.WARNING_MESSAGE);
                                }else{
                                    if (txtCode.getText().equals(vcode.getText())){
                                        String pwd =  String.valueOf(txtPassword.getPassword());
                                        if (pwd.isEmpty()) {
                                            JOptionPane.showMessageDialog(this, "Please enter the password!", "Warning", JOptionPane.WARNING_MESSAGE);
                                            } else {
                                            ua.setPassword(pwd);
                                            JOptionPane.showMessageDialog(this, "Information Saved!");
                                            dB4OUtil.storeSystem(system);
                                        }
                                        
                                    }else{
                                        JOptionPane.showMessageDialog(this, "Wrong Code!", "Warning", JOptionPane.WARNING_MESSAGE);
                                    
                                    }
                                    
                                }
                             
                            }
                        }
                    }
                }
            }
        } 
    }//GEN-LAST:event_btnComfirmUpdateActionPerformed

    private void btnSendCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendCodeActionPerformed
        String ToEmail = txtEmail.getText();
        Random rnd = new Random();
        int number = rnd.nextInt(999999);
        String code = String.format("%06d", number);
        vcode.setText(code);
        
        int i =0;
        if(ToEmail.isEmpty()){
        JOptionPane.showMessageDialog(this, "Please enter your registered email address!", "Warning", JOptionPane.WARNING_MESSAGE);
        }else{
                for(Network network:system.getNetworkList()) {
                    for (Enterprise enterprise: network.getEnterpriseDirectory().getEnterpriseList()) {
                        if (enterprise.getEnterpriseType().toString().equals("CustomerEn")) {
                            for(Organization org: enterprise.getOrganizationDirectory().getOrganizationList()) {
                                for(UserAccount ua: org.getUserAccountDirectory().getUserAccountList()) {
                                    if(ua.getRole().toString().equals("Customer")){
                                        if(ua.getEmail().equals(ToEmail)){
                                             i =1;
                                             break;  
                                        }
                                    }
                                }
                                if(i==0){
                                    JOptionPane.showMessageDialog(this, "This email address is not registered.", "Warning", JOptionPane.WARNING_MESSAGE);
                                }
                            }
                        }
                    }
                }
        }
      
        for(Network network:system.getNetworkList()) {
            for (Enterprise enterprise: network.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise.getEnterpriseType().toString().equals("CustomerEn")) {
                    for(Organization org: enterprise.getOrganizationDirectory().getOrganizationList()) {
                        for(UserAccount ua: org.getUserAccountDirectory().getUserAccountList()) {
                            if (ua.getRole().toString().equals("Customer")&&ua.getEmail().equals(ToEmail)) {                                                                 
                                    String FromEmail = "zihan1997123@gmail.com";
                                    String Subject = "Code for Update Password!";
        
                                    Properties properties = new Properties();
                                    properties.put("mail.smtp.auth", "true");
                                    properties.put("mail.smtp.starttls.enable", "true");
                                    properties.put("mail.smtp.host", "smtp.gmail.com");
                                    properties.put("mail.smtp.port", "587");
        
                                    Session session = Session.getDefaultInstance(properties, new Authenticator() {
                                             @Override
                                             protected PasswordAuthentication getPasswordAuthentication() {
                                             String username = "zihan1997123@gmail.com";
                                             String password = "GoodLuck5100!";
                                             if ((username != null) && (username.length() > 0) && (password != null) && (password.length() > 0)) {
                                                       return new PasswordAuthentication(username, password);
                                             }

                                             return null;
                                             }
                                    });
               
                                    try {
                                             MimeMessage message =new MimeMessage(session);
                                             message.setFrom(new InternetAddress(FromEmail));
                                             message.addRecipient(Message.RecipientType.TO, new InternetAddress(ua.getEmail()));
                                             message.setSubject(Subject);
                                             message.setText("Hi, "+ua.getUsername()+". This is your code for update your password: "+code);
                                             Transport.send(message);
                                    } catch (Exception e) {
                                             System.out.println(""+e);
                                    }
                                    JOptionPane.showMessageDialog(this, "The code has been sent to the email address.", "Warning", JOptionPane.WARNING_MESSAGE);
                                    return;                                                                                    
                            }
                        }
                    }
                }
            }
        } 

        

    }//GEN-LAST:event_btnSendCodeActionPerformed

    private void txtPasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordKeyReleased
        String regx = "^\\S*$";
        Pattern pattern = Pattern.compile(regx);
        Matcher match = pattern.matcher(txtPassword.getText());       
        if(!match.matches()){
            lblPasswordCheck.setText("Invalid");
        }
        else{
            lblPasswordCheck.setText("OK");
        }
    }//GEN-LAST:event_txtPasswordKeyReleased
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnComfirmUpdate;
    private javax.swing.JButton btnSendCode;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblCode;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblPasswordCheck;
    private javax.swing.JLabel lblTitle;
    private UIDesign.SVGImage sVGImage1;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JLabel vcode;
    // End of variables declaration//GEN-END:variables
}
